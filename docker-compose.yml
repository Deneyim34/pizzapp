version: '3.5'

networks:
    laravel:

services:
    nuxt:
        build: ./src/pizza-api-ui/
        container_name: nuxt
        restart: always
        ports:
          - "3000:3000"
        command:
          "yarn start"
    
    nginx:
        build: 
            context: ./
            dockerfile: Dockerfile
        container_name: nginx
        depends_on:
            - nuxt
            - php
            - mysql
            - redis
        environment:
            - "VIRTUAL_HOST=pizzapp.test,api.pizzapp.test,jenkins.pizzapp.test,ngrok.pizzapp.test"
        volumes:
            - ./src:/var/www/html
            - ./hosts:/etc/hosts
        ports:
            - "80:80"
        networks:
            - laravel
            
    mysql:
        image: mysql
        container_name: mysql
        restart: unless-stopped
        tty : true
        ports:
          - "3306:3306"
        environment:
            MYSQL_DATABASE: pizzapp
            MYSQL_USER: root
            MYSQL_PASSWORD: root
            MYSQL_ROOT_PASSWORD: root
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - laravel
        command: "mysqld --default-authentication-plugin=mysql_native_password"
            

            
    php:
        build:
            context: ./DockerFiles/PDO_MYSQL/
            dockerfile: Dockerfile
        container_name: php
        volumes:
            - ./src:/var/www/html
            - ./php-hosts:/etc/hosts
        ports:
            - "9000:9000"
        networks:
            - laravel
            
    redis:
      build: ./DockerFiles/redis
      container_name: redis
      volumes:
        - ./redis:/data
      ports:
        - "6379:6379"

    elasticsearch:
        image: elasticsearch:6.8.1
        restart: always
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - bootstrap.memory_lock=true
        ports:
            - 9200:9200
            
    jenkins:
        build: ./DockerFiles/jenkins
        restart: always
        container_name: jenkins
        volumes:
            - ./data/jenkins:/var/jenkins_home
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - UID_JENKINS=${UID_JENKINS:-1000}
            - GID_JENKINS=${GID_JENKINS:-1000}
            - JENKINS_OPTS=${JENKINS_OPTS:-"--prefix=/jenkins"}
        expose:
            - "8080"
        ports:
            - "8080:8080"
            - "50000:50000"
    
    ngrok:
        image: wernight/ngrok
        container_name: ngrok
        links:
            - jenkins
        stdin_open: true
        tty: true
        ports:
            - "4040:4040"
        environment:
            - NGROK_REGION=eu
            - NGROK_PROTOCOL=http
            - NGROK_PORT=jenkins:8080
        restart: unless-stopped
        
        